name: Deploy to Production

# Trigger the workflow on a schedule (every day at midnight UTC)
on:
  schedule:
    - cron: "0 0 * * *"  # This runs at 00:00 UTC every day

  # Optional: Trigger on push to the main branch
  push:
    branches:
      - Production

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up .NET Core (adjust if you're using a different version)
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      # Step 3: Restore dependencies (for the specific project)
      - name: Restore dependencies
        run: dotnet restore ADD-NETCore-Prototype/PetMinder-API.csproj

      # Step 4: Build the ADD-NETCore-Prototype project (without restoring again)
      - name: Build
        run: dotnet build ADD-NETCore-Prototype/PetMinder-API.csproj --no-restore

      # Step 5: Run unit tests for the entire project or specific folder
      - name: Run tests
        run: |
          dotnet test ADD-NETCore-Prototype.Tests/PetMinder-API.Tests.csproj --no-build --verbosity normal || true
      
      # Step 6: Publish the ADD-NETCore-Prototype project to create deployment artifacts
      - name: Publish application
        run: dotnet publish ADD-NETCore-Prototype/PetMinder-API.csproj --configuration Release --output ./publish-directory

      # Step 7: Upload the artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: net-app
          path: ./publish-directory

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: net-app  # Make sure the name is consistent with what was uploaded
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_FF59F2158E59457C8400C49A14DCEC33 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_108C598E6480479F86B36BD2506B0EEC }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_AA5F3C4C6FC84773B3CC445560EB036D }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'petminder-production-API'
          slot-name: 'Production'
          package: ./publish-directory
